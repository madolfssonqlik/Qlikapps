{"qScript":"\/\/\/$tab Main\r\nSET ThousandSep=',';\r\nSET DecimalSep='.';\r\nSET MoneyThousandSep=',';\r\nSET MoneyDecimalSep='.';\r\nSET MoneyFormat='$ ###0.00;-$ ###0.00';\r\nSET TimeFormat='h:mm:ss TT';\r\nSET DateFormat='M\/D\/YYYY';\r\nSET TimestampFormat='M\/D\/YYYY h:mm:ss[.fff] TT';\r\nSET FirstWeekDay=6;\r\nSET BrokenWeeks=1;\r\nSET ReferenceDay=0;\r\nSET FirstMonthOfYear=1;\r\nSET CollationLocale='en-US';\r\nSET CreateSearchIndexOnReload=1;\r\nSET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';\r\nSET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';\r\nSET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';\r\nSET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';\r\nSET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:\u03bc;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';\r\n\r\n\/\/\/$tab Auto-generated section\r\n\/\/\/$autogenerated\r\nSet dataManagerTables = '','MOCK_DATA (3)','MOCK_DATA (4)';\r\n\/\/This block renames script tables from non generated section which conflict with the names of managed tables\r\n\r\nFor each name in $(dataManagerTables) \r\n    Let index = 0;\r\n    Let currentName = name; \r\n    Let tableNumber = TableNumber(name); \r\n    Let matches = 0; \r\n    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)\r\n        index = index + 1; \r\n        currentName = name & '-' & index; \r\n        tableNumber = TableNumber(currentName) \r\n        matches = Match('$(currentName)', $(dataManagerTables));\r\n    Loop \r\n    If index > 0 then \r\n            Rename Table '$(name)' to '$(currentName)'; \r\n    EndIf; \r\nNext; \r\nSet dataManagerTables = ;\r\n\r\n\r\nUnqualify *;\r\n\r\n__countryGeoBase:\r\nLOAD\r\n\tISO3Code AS [__ISO3Code],\r\n\tISO2Code AS [__ISO2Code],\r\n\tPolygon AS [__Polygon]\r\nFROM [lib:\/\/DataFiles\/countryGeo.qvd]\r\n(qvd);\r\n\r\n__countryCodeIsoTwo2Polygon:\r\nMAPPING LOAD\r\n\t__ISO2Code,\r\n\t__Polygon\r\nRESIDENT __countryGeoBase;\r\n\r\n[MOCK_DATA (3)]:\r\nLOAD\r\n\t[id],\r\n\t[Name],\r\n\t[email],\r\n\t[gender],\r\n\t[Country],\r\n\t[Country_code],\r\n\t[Company],\r\n\tAPPLYMAP( '__countryCodeIsoTwo2Polygon', UPPER([Country_code]), '-') AS [MOCK_DATA (3).Country_code_GeoInfo]\r\n FROM [lib:\/\/DataFiles\/MOCK_DATA (3).csv]\r\n(txt, codepage is 28591, embedded labels, delimiter is ',', msq);\r\n\r\n[MOCK_DATA (4)]:\r\nLOAD\r\n\t[id],\r\n\t[TCV]\r\n FROM [lib:\/\/DataFiles\/MOCK_DATA (4).csv]\r\n(txt, codepage is 28591, embedded labels, delimiter is ',', msq);\r\n\r\n\r\n\r\nTAG FIELD [Country_code] WITH '$geoname', '$relates_MOCK_DATA (3).Country_code_GeoInfo';\r\nTAG FIELD [MOCK_DATA (3).Country_code_GeoInfo] WITH '$geopolygon', '$hidden', '$relates_Country_code';\r\n\r\nDROP TABLES __countryGeoBase;\r\n"}